{"version":3,"sources":["views/Reviews/Reviews.js"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","API","then","results","catch","console","log","length","map","review","author","content","id"],"mappings":"kOAIe,SAASA,IACtB,IAAQC,EAAYC,cAAZD,QACR,EAA8BE,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAWA,OAVAC,qBAAU,WACRC,IAAgBN,GACbO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACHA,GACFJ,EAAWI,MAGdC,MAAMC,QAAQC,IAAI,YACpB,CAACX,IAGF,8BACGG,GAAWA,EAAQS,OAAS,EAC3B,6BACGT,EAAQU,KAAI,SAACC,GAAD,OACX,+BACE,yCAAYA,EAAOC,UACnB,4BAAID,EAAOE,YAFJF,EAAOG,SAOpB","file":"static/js/10.115edc5a.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n//import { fetchReview } from \"../../service/API\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport * as API from \"../../service/API\";\r\nexport default function Reviews() {\r\n  const { movieId } = useParams();\r\n  const [reviews, setReviews] = useState([]);\r\n  useEffect(() => {\r\n    API.fetchReview(movieId)\r\n      .then(({ results }) => {\r\n        if (results) {\r\n          setReviews(results);\r\n        }\r\n      })\r\n      .catch(console.log(\"error\"));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div>\r\n      {reviews && reviews.length > 0 ? (\r\n        <ul>\r\n          {reviews.map((review) => (\r\n            <li key={review.id}>\r\n              <b>Author: {review.author}</b>\r\n              <p>{review.content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>We don't have any reviews for this movie</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}